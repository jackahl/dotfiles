#!/usr/bin/env bash

# ~/.macos — https://mths.be/macos

# Close any open System Preferences panes, to prevent them from overriding
# settings we’re about to change
osascript -e 'tell application "System Preferences" to quit'

# Ask for the administrator password upfront
sudo -v

# Keep-alive: update existing `sudo` time stamp until `.macos` has finished
while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &

###############################################################################
# Timo                                                                        #
###############################################################################

echo "install oh-my-zsh"
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

echo "cloning dotfiles"
git clone git@github.com:tisto/dotfiles.git "${HOME}/workspace/dotfiles"
ln -s "${HOME}/workspace/dotfiles/.zshrc" "${HOME}/.zshrc"
ln -s "${HOME}/workspace/dotfiles/.buildout" "${HOME}/.buildout"

echo "installing homebrew"
# install homebrew https://brew.sh
brew | /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

echo "brew installing stuff"
# hub: a github-speciic version of git
# python3: 
brew install git hub python3 pyenv-virtualenv
# libpcre: required by Plone/Volto (pyscss dep)
brew install libpcre
# libmagic: required by kitconcept.contentcreator (python_magic)
brew install libmagic
# libdev: required by locustio
brew install libev
# sassc: required by node-sass -> Volto
brew install sassc

# T.
# ansible			enchant			gnutls			libmagic		mercurial		packer			ssh-copy-id
# aspell			findutils		goaccess		libmatroska		mkvtoolnix		pcre			thefuck
# bash			flac			gobject-introspection	libogg			moreutils		pcre2			tokyo-cabinet
# bash-completion2	fontconfig		icu4c			libpng			mysql@5.7		pixman			watch
# bash-completion@2	freetype		jpeg			libsass			nettle			pkg-config		watchman
# boost			gdbm			libdvdcss		libtasn1		nmap			poppler			webp
# cairo			geckodriver		libebml			libtiff			nspr			python			wget
# chromedriver		gettext			libffi			libunistring		nss			python3			xz
# cocoapods		git			libgcrypt		libvorbis		openjpeg		python@2		zlib
# coreutils		glib			libgpg-error		libxmlsec1		openssl			readline
# cputhrottle		gmp			libidn			libyaml			openssl@1.1		sassc
# diffutils		gnu-sed			libidn2			little-cms2		p11-kit			sqlite

# V.
# ansible			cocoapods		freetype		gnutls			libgcrypt		libsass			mercurial		openjpeg		pkg-config		ssh-copy-id		zlib
# aspell			coreutils		gdbm			goaccess		libgpg-error		libtasn1		mkvtoolnix		openssl			poppler			thefuck
# bash			cputhrottle		geckodriver		gobject-introspection	libidn			libtiff			moreutils		openssl@1.1		python			tokyo-cabinet
# bash-completion2	diffutils		gettext			icu4c			libidn2			libunistring		mysql@5.7		p11-kit			python3			watch
# bash-completion@2	enchant			git			jpeg			libmagic		libvorbis		nettle			packer			python@2		watchman
# boost			findutils		glib			libdvdcss		libmatroska		libxmlsec1		nmap			pcre			readline		webp
# cairo			flac			gmp			libebml			libogg			libyaml			nspr			pcre2			sassc			wget
# chromedriver		fontconfig		gnu-sed			libffi			libpng			little-cms2		nss			pixman			sqlite			xz

echo "installing apps with brew cask"
iterm | brew cask install iterm2 
brew cask install google-chrome 
brew cask install firefox
brew cask install google-drive-file-stream
code | brew cask install visual-studio-code
brew cask install 1password
brew cask install slack
brew cask install harvest

# required by solr/jmeter
brew cask install java

# node
echo "installing node"
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
nvm install --lts

# installing yarn with bash because it tries to install node when using brew.
curl -o- -L https://yarnpkg.com/install.sh | bash | true

# echo "installing node (via n-install)"
# curl -L https://git.io/n-install | bash

# echo "node --version: $(node --version)"
# echo "npm --version: $(npm --version)"

echo "installing a few global npm packages"
# npm install --global serve diff-so-fancy fkill-cli npm-quick-run semantic-release-cli

# python stuff
pip3 install virtualenv

# .ssh dir permissions
mkdir -p /Users/timo/.ssh
chmod 700 /Users/timo/.ssh
chmod 644 /Users/timo/.ssh/*.pub
chmod 600 /Users/timo/.ssh/timostollenwerk
chmod 600 /Users/timo/.ssh/github

# Fix "fatal error: 'X11/Xlib.h' file not found" for old Pillow versions
ln -s /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/System/Library/Frameworks/Tk.framework/Versions/8.5/Headers/X11 /usr/local/include/X11

